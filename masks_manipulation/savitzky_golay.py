import numpy as np
from scipy.signal import savgol_filter

def savgol_smoothing(centers, win_len, polyord):
    """Apply Savitzky-Golay filter to the centers points in order to smooth the
    signal generated by them without losing too much information.

    Keyword arguments:
    centers -- x-y tuples of positions corresponding to the center of
               the masks representing the fingers
    win_len -- Length of the filter window (number of coefficients)
    polyord -- Order of the polynomial used to fit the samples. The smaller this
               value compared to win_len, the more smoothing we get
    """

    # Apply Savitzky-Golay filter to x and y points of the first finger
    finger_0_x = savgol_filter(centers[0, :, 0], window_length=win_len,
                               polyorder=polyord)
    finger_0_y = savgol_filter(centers[0, :, 1], window_length=win_len,
                               polyorder=polyord)
    finger_0 = np.stack((finger_0_x, finger_0_y), axis=1)

    # Apply Savitzky-Golay filter to x and y points of the second finger
    finger_1_x = savgol_filter(centers[1, :, 0], window_length=win_len,
                               polyorder=polyord)
    finger_1_y = savgol_filter(centers[1, :, 1], window_length=win_len,
                               polyorder=polyord)
    finger_1 = np.stack((finger_1_x, finger_1_y), axis=1)

    smoothed_fingers = np.stack((finger_0, finger_1), axis=0)

    return smoothed_fingers
